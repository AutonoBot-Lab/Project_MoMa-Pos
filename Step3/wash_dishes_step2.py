# The step2 aims to shinengchang
import matplotlib.pyplot as plt
from matplotlib.patches import Polygon
from mpl_toolkits.mplot3d.art3d import Poly3DCollection
all_boxes_range=[[[3.801803249962627, 2.798124243974686, -0.050063745021820094], [4.398934257864952, 2.798124243974686, -0.050063745021820094], [4.398934257864952, 3.6138232537508013, -0.050063745021820094], [3.801803249962627, 3.6138232537508013, -0.050063745021820094], [3.801803249962627, 2.798124243974686, 0.7548704870939257], [4.398934257864952, 2.798124243974686, 0.7548704870939257], [4.398934257864952, 3.6138232537508013, 0.7548704870939257], [3.801803249962627, 3.6138232537508013, 0.7548704870939257]], [[3.217097979495048, 2.769108240962029, -0.050063745021820205], [3.570110748598099, 2.769108240962029, -0.050063745021820205], [3.570110748598099, 3.642838496804238, -0.050063745021820205], [3.217097979495048, 3.642838496804238, -0.050063745021820205], [3.217097979495048, 2.769108240962029, 0.7838857301473617], [3.570110748598099, 2.769108240962029, 0.7838857301473617], [3.570110748598099, 3.642838496804238, 0.7838857301473617], [3.217097979495048, 3.642838496804238, 0.7838857301473617]], [[3.5101837408633236, 3.226199499800802, 0.39260575091838834], [3.58548575181675, 3.226199499800802, 0.39260575091838834], [3.58548575181675, 3.544824745595456, 0.39260575091838834], [3.5101837408633236, 3.544824745595456, 0.39260575091838834], [3.5101837408633236, 3.226199499800802, 0.40060575091838835], [3.58548575181675, 3.226199499800802, 0.40060575091838835], [3.58548575181675, 3.544824745595456, 0.40060575091838835], [3.5101837408633236, 3.544824745595456, 0.40060575091838835]], [[3.5343434926958084, 2.8741577393412596, 0.39260575091838834], [3.57513200033617, 2.8741577393412596, 0.39260575091838834], [3.57513200033617, 3.2048625000191393, 0.39260575091838834], [3.5343434926958084, 3.2048625000191393, 0.39260575091838834], [3.5343434926958084, 2.8741577393412596, 0.40060575091838835], [3.57513200033617, 2.8741577393412596, 0.40060575091838835], [3.57513200033617, 3.2048625000191393, 0.40060575091838835], [3.5343434926958084, 3.2048625000191393, 0.40060575091838835]], [[3.1741110202760696, 2.8204960129261023, 0.5779345027208327], [3.2435712470502853, 2.8204960129261023, 0.5779345027208327], [3.2435712470502853, 3.587643731474877, 0.5779345027208327], [3.1741110202760696, 3.587643731474877, 0.5779345027208327], [3.1741110202760696, 2.8204960129261023, 0.6361732610464095], [3.2435712470502853, 2.8204960129261023, 0.6361732610464095], [3.2435712470502853, 3.587643731474877, 0.6361732610464095], [3.1741110202760696, 3.587643731474877, 0.6361732610464095]], [[3.2727112588377, 2.849713740408421, 0.3854447501748798], [3.8262027512134313, 2.849713740408421, 0.3854447501748798], [3.8262027512134313, 3.577601250350476, 0.3854447501748798], [3.2727112588377, 3.577601250350476, 0.3854447501748798], [3.2727112588377, 2.849713740408421, 0.6614444979429245], [3.8262027512134313, 2.849713740408421, 0.6614444979429245], [3.8262027512134313, 3.577601250350476, 0.6614444979429245], [3.2727112588377, 3.577601250350476, 0.6614444979429245]]]

fig, ax = plt.subplots()

# 定义一个函数来提取在z=0.85平面的边
def get_edges_at_z(box, z_value):
    # 提取每个盒子的底部和顶部角点
    bottom_corners = box[:4]
    top_corners = box[4:]

    # 存储在z=0.85平面上的边
    edges_on_plane = []

    # 检查每一对底部和顶部角点
    for b, t in zip(bottom_corners, top_corners):
        # 如果一个角点在平面下方，另一个在上方，则边与平面相交
        if (b[2] <= z_value and t[2] >= z_value) or (b[2] >= z_value and t[2] <= z_value):
            # 使用线性插值找到交点
            ratio = (z_value - b[2]) / (t[2] - b[2])
            x = b[0] + ratio * (t[0] - b[0])
            y = b[1] + ratio * (t[1] - b[1])
            edges_on_plane.append([x, y])

    return edges_on_plane
all_edges_on_plane = []
# 处理每个盒子并在z=0.85平面绘制边
for box in all_boxes_range:
    edges = get_edges_at_z(box, 0.5)
    if edges:
        # 假设每个盒子在平面上有两条边
        polygon = Polygon(edges, closed=False, edgecolor='r', fill=None)
        ax.add_patch(polygon)
        all_edges_on_plane.append(edges)
print(all_edges_on_plane)
# 在z=0.85平面上添加散点图点（4.2, 5.5）
ax.scatter(3.4, 3.5, color='green')

# 设置图的限制
ax.set_xlim(1, 6)
ax.set_ylim(1, 6)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_title('Z=0.5 touying')

# 展示图表
plt.show()